{"ast":null,"code":"import axios from 'axios'; // Alamat API backends untuk nangkap data \n\nconst USER_API_BASE_URL = \"http://localhost:9080/users\";\n\nclass UserService {\n  getUsers() {\n    return axios.get(USER_API_BASE_URL);\n  }\n\n  createUser(user) {\n    return axios.post(USER_API_BASE_URL, user);\n  }\n\n  getUserById(userId) {\n    return axios.get(USER_API_BASE_URL + '/' + userId);\n  }\n\n  updateUser(user, userId) {\n    return axios.put(USER_API_BASE_URL + '/' + userId, user);\n  }\n\n  deleteUser(userId) {\n    return axios.delete(USER_API_BASE_URL + '/' + userId);\n  }\n\n}\n\nexport default new UserService();","map":{"version":3,"sources":["C:/Users/M Guntur Nugraha/Documents/CODINGAN/Golang/presentasi_3/golang_microservice-master/frontend/src/services/UserService.js"],"names":["axios","USER_API_BASE_URL","UserService","getUsers","get","createUser","user","post","getUserById","userId","updateUser","put","deleteUser","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,iBAAiB,GAAG,6BAA1B;;AAEA,MAAMC,WAAN,CAAkB;AACdC,EAAAA,QAAQ,GAAE;AACN,WAAOH,KAAK,CAACI,GAAN,CAAUH,iBAAV,CAAP;AACH;;AACDI,EAAAA,UAAU,CAACC,IAAD,EAAM;AACZ,WAAON,KAAK,CAACO,IAAN,CAAWN,iBAAX,EAA8BK,IAA9B,CAAP;AACH;;AACDE,EAAAA,WAAW,CAACC,MAAD,EAAQ;AACf,WAAOT,KAAK,CAACI,GAAN,CAAUH,iBAAiB,GAAG,GAApB,GAA0BQ,MAApC,CAAP;AACH;;AACDC,EAAAA,UAAU,CAACJ,IAAD,EAAOG,MAAP,EAAc;AACpB,WAAOT,KAAK,CAACW,GAAN,CAAUV,iBAAiB,GAAG,GAApB,GAA0BQ,MAApC,EAA4CH,IAA5C,CAAP;AACH;;AACDM,EAAAA,UAAU,CAACH,MAAD,EAAQ;AACd,WAAOT,KAAK,CAACa,MAAN,CAAaZ,iBAAiB,GAAG,GAApB,GAA0BQ,MAAvC,CAAP;AACH;;AAfa;;AAkBlB,eAAe,IAAIP,WAAJ,EAAf","sourcesContent":["import axios from 'axios';\n\n// Alamat API backends untuk nangkap data \nconst USER_API_BASE_URL = \"http://localhost:9080/users\";\n\nclass UserService {\n    getUsers(){\n        return axios.get(USER_API_BASE_URL);\n    }\n    createUser(user){\n        return axios.post(USER_API_BASE_URL, user);\n    }\n    getUserById(userId){\n        return axios.get(USER_API_BASE_URL + '/' + userId);\n    }\n    updateUser(user, userId){\n        return axios.put(USER_API_BASE_URL + '/' + userId, user);\n    }\n    deleteUser(userId){\n        return axios.delete(USER_API_BASE_URL + '/' + userId);\n    }\n}\n\nexport default new UserService()"]},"metadata":{},"sourceType":"module"}