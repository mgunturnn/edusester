{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\M Guntur Nugraha\\\\Documents\\\\CODINGAN\\\\tubes 2\\\\golang_crud_kelompok 7\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\M Guntur Nugraha\\\\Documents\\\\CODINGAN\\\\tubes 2\\\\golang_crud_kelompok 7\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:\\\\Users\\\\M Guntur Nugraha\\\\Documents\\\\CODINGAN\\\\tubes 2\\\\golang_crud_kelompok 7\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\M Guntur Nugraha\\\\Documents\\\\CODINGAN\\\\tubes 2\\\\golang_crud_kelompok 7\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\M Guntur Nugraha\\\\Documents\\\\CODINGAN\\\\tubes 2\\\\golang_crud_kelompok 7\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import UserService from'../services/UserService';var CreateUserComponent=/*#__PURE__*/function(_Component){_inherits(CreateUserComponent,_Component);var _super=_createSuper(CreateUserComponent);function CreateUserComponent(props){var _this;_classCallCheck(this,CreateUserComponent);_this=_super.call(this,props);// data yang dimasukkan kedalam component\n// Inisialiasasi state/ variabel yang diperlukan dalam program ini\n_this.saveOrUpdateUser=function(e){e.preventDefault();var user={firstName:_this.state.firstName,lastName:_this.state.lastName,email:_this.state.email};console.log('user => '+JSON.stringify(user));// step 5\n// jika state bernilai _add\nif(_this.state.id==='_add'){// maka ia akan memanggil function createUser \nUserService.createUser(user).then(function(res){// kemudian mengganti/memindahkan link \n_this.props.history.push('/users');});// jika state tidak bernilai _add\n}else{// maka akan dipanggil function updateUser\nUserService.updateUser(user,_this.state.id).then(function(res){// kemudian memindahkan link\n_this.props.history.push('/users');});}};_this.changeFirstNameHandler=function(event){_this.setState({firstName:event.target.value});};_this.changeLastNameHandler=function(event){_this.setState({lastName:event.target.value});};_this.changeEmailHandler=function(event){_this.setState({email:event.target.value});};_this.state={// step 2\nid:_this.props.match.params.id,firstName:'',lastName:'',email:''};_this.changeFirstNameHandler=_this.changeFirstNameHandler.bind(_assertThisInitialized(_this));_this.changeLastNameHandler=_this.changeLastNameHandler.bind(_assertThisInitialized(_this));_this.saveOrUpdateUser=_this.saveOrUpdateUser.bind(_assertThisInitialized(_this));return _this;}// Jadi semacam useEffect nya, function yang akan dieksekusi ketika membuka halamanya\n_createClass(CreateUserComponent,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;if(this.state.id==='_add'){return;}else{// Menampilkan data lama yang diambil dari database berdasarkan id user yang dipilih\nUserService.getUserById(this.state.id).then(function(res){var user=res.data;// Di simpan ke dalam sebuah state/variable\n// mengget user dengan id sekian lalu kita simpan pada sebuah state/variable\n_this2.setState({firstName:user.firstName,lastName:user.lastName,email:user.email});});}}// function untuk menyimpan atau mengupdate data dari user\n},{key:\"cancel\",value:function cancel(){this.props.history.push('/users');}},{key:\"getTitle\",value:function getTitle(){if(this.state.id==='_add'){return/*#__PURE__*/React.createElement(\"h3\",{className:\"text-center\"},\"Tambah Data Bencana\");}else{return/*#__PURE__*/React.createElement(\"h3\",{className:\"text-center\"},\"Update Data Bencana\");}}// proses menampilkan data-data yang sudah di proses\n// menampilkan field-field kosong yang perlu diisi user\n},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card col-md-6 offset-md-3 offset-md-3\"},this.getTitle(),/*#__PURE__*/React.createElement(\"div\",{className:\"card-body\"},/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\" Nama Bencana: \"),/*#__PURE__*/React.createElement(\"input\",{placeholder:\"Nama Bencana\",name:\"firstName\",className:\"form-control\",value:this.state.firstName,onChange:this.changeFirstNameHandler})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\" Tempat Kejadian: \"),/*#__PURE__*/React.createElement(\"input\",{placeholder:\"Tempat Kejadian\",name:\"lastName\",className:\"form-control\",value:this.state.lastName,onChange:this.changeLastNameHandler})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\" Update Penanganan: \"),/*#__PURE__*/React.createElement(\"input\",{placeholder:\"Update Penanganan\",name:\"email\",className:\"form-control\",value:this.state.email,onChange:this.changeEmailHandler})),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-success\",onClick:this.saveOrUpdateUser},\"Save\"),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-danger\",onClick:this.cancel.bind(this),style:{marginLeft:\"10px\"}},\"Cancel\")))))));}}]);return CreateUserComponent;}(Component);export default CreateUserComponent;","map":{"version":3,"sources":["C:/Users/M Guntur Nugraha/Documents/CODINGAN/tubes 2/golang_crud_kelompok 7/frontend/src/components/CreateUserComponent.jsx"],"names":["React","Component","UserService","CreateUserComponent","props","saveOrUpdateUser","e","preventDefault","user","firstName","state","lastName","email","console","log","JSON","stringify","id","createUser","then","res","history","push","updateUser","changeFirstNameHandler","event","setState","target","value","changeLastNameHandler","changeEmailHandler","match","params","bind","getUserById","data","getTitle","cancel","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport UserService from '../services/UserService';\n\nclass CreateUserComponent extends Component {\n    constructor(props) {\n        super(props) // data yang dimasukkan kedalam component\n\n        // Inisialiasasi state/ variabel yang diperlukan dalam program ini\n        this.state = {\n            // step 2\n            id: this.props.match.params.id,\n            firstName: '',\n            lastName: '',\n            email: ''\n        }\n        this.changeFirstNameHandler =\n            this.changeFirstNameHandler.bind(this);\n        this.changeLastNameHandler =\n            this.changeLastNameHandler.bind(this);\n        this.saveOrUpdateUser =\n            this.saveOrUpdateUser.bind(this);\n    }\n\n    // Jadi semacam useEffect nya, function yang akan dieksekusi ketika membuka halamanya\n    componentDidMount() {\n\n        if (this.state.id === '_add') {\n            return\n        } else {\n            // Menampilkan data lama yang diambil dari database berdasarkan id user yang dipilih\n            UserService.getUserById(this.state.id).\n                then((res) => {\n                    let user = res.data;\n                    // Di simpan ke dalam sebuah state/variable\n                    // mengget user dengan id sekian lalu kita simpan pada sebuah state/variable\n                    this.setState({\n                        firstName: user.firstName,\n                        lastName: user.lastName,\n                        email: user.email\n                    });\n                });\n        }\n    }\n\n    // function untuk menyimpan atau mengupdate data dari user\n    saveOrUpdateUser = (e) => {\n        e.preventDefault();\n        let user = {\n            firstName: this.state.firstName, lastName:\n                this.state.lastName, email: this.state.email\n        };\n        console.log('user => ' + JSON.stringify(user));\n\n        // step 5\n        // jika state bernilai _add\n        if (this.state.id === '_add') {\n            // maka ia akan memanggil function createUser \n            UserService.createUser(user).then(res => {\n                // kemudian mengganti/memindahkan link \n                this.props.history.push('/users');\n            });\n            // jika state tidak bernilai _add\n        } else {\n            // maka akan dipanggil function updateUser\n            UserService.\n                updateUser(user, this.state.id).then(res => {\n                    // kemudian memindahkan link\n                    this.props.history.push('/users');\n                });\n        }\n    }\n\n    changeFirstNameHandler = (event) => {\n        this.setState({ firstName: event.target.value });\n    }\n\n    changeLastNameHandler = (event) => {\n        this.setState({ lastName: event.target.value });\n    }\n\n    changeEmailHandler = (event) => {\n        this.setState({ email: event.target.value });\n    }\n\n    cancel() {\n        this.props.history.push('/users');\n    }\n\n    getTitle() {\n        if (this.state.id === '_add') {\n            return <h3 className=\"text-center\">Tambah Data Bencana</h3>\n        } else {\n            return <h3 className=\"text-center\">Update Data Bencana</h3>\n        }\n    }\n\n    // proses menampilkan data-data yang sudah di proses\n    // menampilkan field-field kosong yang perlu diisi user\n    render() {\n        return (\n            <div>\n                <br></br>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\n                            {\n                                this.getTitle()\n                            }\n                            <div className=\"card-body\">\n                                <form>\n                                    <div className=\"form-group\">\n                                        <label> Nama Bencana: </label>\n                                        <input placeholder=\"Nama Bencana\"\n                                            name=\"firstName\" className=\"form-control\"\n                                            value={this.state.firstName}\n                                            onChange={this.changeFirstNameHandler} />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label> Tempat Kejadian: </label>\n                                        <input placeholder=\"Tempat Kejadian\"\n                                            name=\"lastName\" className=\"form-control\"\n                                            value={this.state.lastName}\n                                            onChange={this.changeLastNameHandler} />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label> Update Penanganan: </label>\n                                        <input placeholder=\"Update Penanganan\"\n                                            name=\"email\" className=\"form-control\"\n                                            value={this.state.email}\n                                            onChange={this.changeEmailHandler} />\n                                    </div>\n\n                                    <button className=\"btn btn-success\"\n                                        onClick={this.saveOrUpdateUser}>Save\n                                    </button>\n                                    <button className=\"btn btn-danger\"\n                                        onClick={this.cancel.bind(this)}\n                                        style={{ marginLeft: \"10px\" }}>Cancel\n                                    </button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CreateUserComponent\n"]},"metadata":{},"sourceType":"module"}